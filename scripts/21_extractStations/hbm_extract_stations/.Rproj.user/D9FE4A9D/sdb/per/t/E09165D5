{
    "collab_server" : "",
    "contents" : "library('ncdf4')\nsource('support/hbm_constants.R')  \nsource('support/read_varlist.R')  \nsource('support/read_varmapping_L0L1.R')\nsource('support/generate_varmapping_L2L2.R')\nsource('support/createL1file.R')\nsource('support/createL2file.R')\nsource('support/get_basic_grid_data.R')\nsource('support/latlon2cell.R')\nsource('support/read_stations.R')\nsource('support/calculate_variable.R')\nsource('support/generate_filesnames.R')\nsource('support/open_files.R')\nsource('support/close_files.R')\nsource('support/fill_grid_data_base.R')\nsource('support/get_varmapping_L0Fi.R')\nsource('support/remap_variables_L0L1.R')\nsource('support/read_data_L0.R')\nsource('support/readL1file.R')\nsource('support/extract_tag_data.R')\n\nreadL0=TRUE\ncalcL1=TRUE\nwriteL1=TRUE\nreadL1=FALSE\ncalcL2=TRUE\nwriteL2=TRUE\ndoShip=TRUE\ndoRiver=TRUE\n\nWORK='B'\n# WORK='D'\n\nsaveData=TRUE\n# savePrefix=''\n# savePrefix='testing_'\nsavePrefix='test_'\n\n# sea='northsea'\n# sea='balticsea'\nsea='all'\n\n## load('')\n## save('dataL0', 'dataL1', 'dataL2', 'grids', 'varnames', 'varmapping', 'varlist', 'stations', 'ncFileNames', file = paste0('data_work', WORK, '.RData'))\n### save('dataL0', 'dataL1', 'dataL2', 'grids', 'varnames', 'varmapping', 'varlist', 'stations', 'ncFileNames', file = paste0('data_northsea_work', WORK, '.RData'))\n### save('dataL0', 'dataL1', 'dataL2', 'grids', 'varnames', 'varmapping', 'varlist', 'stations', 'ncFileNames', file = paste0('data_balticsea_work', WORK, '.RData'))\n### save('dataL0', 'dataL1', 'dataL2', 'grids', 'varnames', 'varmapping', 'varlist', 'stations', 'ncFileNames', file = paste0('data_', sea, '_work', WORK, '.RData'))\n## save('dataL0', 'dataL1', 'dataL2', 'grids', 'varnames', 'varmapping', 'varlist', 'stations', 'ncFileNames', file = paste0(savePrefix, 'data_', sea, '_work', WORK, '.RData'))\n\n# directories ----\nvarmappingFileName = paste0('../control_files/variablemapping_work', WORK,'.csv')\nvarlistFileName = '../control_files/variablelist_neumannd2.csv'\n# stationsFileName = '/media/neumannd/work_dell/88_MeRamo/64_validator_data_preparation/test_stations.csv'\n# stationsFileName = '../control_files/all_stations.csv'\n# stationsFileName = '/media/neumannd/work_dell/88_MeRamo/65_validation_data_BSH/northsea_stations.csv'\nstationsFileName = paste0('../control_files/',sea,'_stations.csv')\noutdir = paste0('../output/STATIONS_WORK', WORK)\n# inDir = '/silod4/dneumann/HBM/RESULTS/EVALUATION'\ninDir = '/media/neumannd/private_dell/HBM/RESULTS/EVALUATION'\n\n\n# get grid infos ----\nif (readL0) {\n  grids = get_basic_grid_data()\n}\n\n\n# generate files names and open files ----\nncFiles = list()\nfilenamePrefix = list('ERGOM'='p', 'HBM'='p')\nfilenameSuffix = list('ERGOM'=paste0('WORK', WORK, '_merge_mean_2012_jan.nc'),\n                      'HBM'='WORKE_merge_mean_2012_jan.nc')\nfileTypes      = list('ERGOM'=c('biodat', 'bendat', 'chldat', 'light', 'secchidat'),\n                      'HBM' = c('t_file', 'z_file', 'c_file')) \nncFileNames   = generate_filesnames(grids, fileTypes, filenamePrefix, filenameSuffix)\n\n\n# read variable and station data ----\nvarmapping  = list()\nvarnames    = list()\nvarmapping  = append(varmapping, get_varmapping_L0Fi(WORK)) \nvarmapping  = append(varmapping, read_varmapping_L0L1(varmappingFileName))\nvarlist     = read_varlist(varlistFileName)\nvarnames$L0 = names(varmapping$L0Fi)\nvarnames$L1 = names(varmapping$L1L0)\nvarnames$L2 = names(varlist)\nvarmapping  = append(varmapping, generate_varmapping_L2L2(varnames$L2))\n\n\n# read L0 data ----\nif (readL0) {\n  print('read data L0')\n  ncFiles$L0 = open_files(ncFileNames)\n  grids      = fill_grid_data_base(grids, ncFiles$L0$biodat)\n  stations    = read_stations(stationsFileName, grids)\n  dataL0     = read_data_L0(stations, ncFiles$L0, varmapping, grids)\n}\n\n\nif (saveData) save('dataL0', 'grids', 'varnames', 'varmapping', 'varlist', 'stations', 'ncFileNames', file = paste0(savePrefix, 'dataL0_', sea, '_work', WORK, '.RData'))\n\n\n# remap L0 to L1 ----\nif (calcL1) {\n  print('convert data L0 -> L1')\n  dataL1 = remap_variables_L0L1(names(stations), varnames, varmapping, dataL0)\n}\n\n\nif (saveData) save('dataL1', 'grids', 'varnames', 'varmapping', 'varlist', 'stations', 'ncFileNames', file = paste0(savePrefix, 'dataL1_', sea, '_work', WORK, '.RData'))\n\n\n# write L1 data ----\nif (writeL1) {\n  print('write data L1')\n  ncFiles$L1 = createL1file(stations, varnames, varmapping, dataL1, outdir, grids)\n}\n\n\n# read L1 data ----\nif (readL1) {\n  print('read data L1')\n  print('Empty')\n}\n\n\n# calculate L2 data ----\nif (calcL2) {\n  print('convert data L1 -> L2')\n  dataL2 = list()\n  for(iVar in names(varlist)) {\n    dataL2[[iVar]] = list()\n    dataL2[[iVar]]$data = calculate_variable(varlist[[iVar]]$formula, dataL1)\n  }\n}\n\n\nif (saveData) save('dataL2', 'grids', 'varnames', 'varmapping', 'varlist', 'stations', 'ncFileNames', file = paste0(savePrefix, 'dataL2_', sea, '_work', WORK, '.RData'))\nif (saveData) save('dataL0', 'dataL1', 'dataL2', 'grids', 'varnames', 'varmapping', 'varlist', 'stations', 'ncFileNames', file = paste0(savePrefix, 'data_', sea, '_work', WORK, '.RData'))\n\n\n# write L2 data ----\nif (writeL2) {\n  print('write data L2')\n  ncFiles$L2 = createL2file(stations, varnames, varlist, varmapping, dataL2, outdir, grids)\n}\n\n\n# do ship data ----\nif (doShip && WORK=='B') {\n  print('do ship: extract L1')\n  dataShipL1 = extract_tag_data(dataL1, 'ship', c('ship', 'river'), sep = '_')\n  print('do ship: write L1')\n  tmpVarnames = list('L1' = intersect(names(dataShipL1), varnames$L1))\n  ncFiles$L1 = createL1file(stations, tmpVarnames, varmapping, dataShipL1, outdir, grids, '_ship')\n  print('do ship: extract L2')\n  dataShipL2 = list()\n  for(iVar in names(varlist)) {\n    dataShipL2[[iVar]] = list()\n    dataShipL2[[iVar]]$data = calculate_variable(varlist[[iVar]]$formula, dataShipL1)\n  }\n  print('do ship: write L2')\n  ncFiles$L2 = createL2file(stations, varnames, varlist, varmapping, dataShipL2, outdir, grids, '_ship')\n}\n\n# do river data ----\nif (doRiver && WORK=='B') {\n  print('do river: extract L1')\n  dataRiverL1 = extract_tag_data(dataL1, 'river', c('ship', 'river'), sep = '_')\n  print('do river: write L1')\n  tmpVarnames = list('L1' = intersect(names(dataRiverL1), varnames$L1))\n  ncFiles$L1 = createL1file(stations, tmpVarnames, varmapping, dataRiverL1, outdir, grids, '_river')\n  print('do river: extract L2')\n  dataRiverL2 = list()\n  for(iVar in names(varlist)) {\n    dataRiverL2[[iVar]] = list()\n    dataRiverL2[[iVar]]$data = calculate_variable(varlist[[iVar]]$formula, dataRiverL1)\n  }\n  print('do river: write L2')\n  ncFiles$L2 = createL2file(stations, varnames, varlist, varmapping, dataRiverL2, outdir, grids, '_river')\n}\n\n\n# close all netCDF files ----\nclose_files(ncFiles)\n",
    "created" : 1495532254958.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3821755611",
    "id" : "E09165D5",
    "lastKnownWriteTime" : 1497001021,
    "last_content_update" : 1497001021587,
    "path" : "/media/neumannd/work_dell/88_MeRamo/64_validator_data_preparation/workflow/hbm_extract_stations/hbm_extract_stations.R",
    "project_path" : "hbm_extract_stations.R",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}